"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vitest_1 = require("vitest");
const compat_1 = require("./compat");
(0, vitest_1.describe)('propCamelCase', () => {
    (0, vitest_1.test)('converts dashes to camelCase', () => {
        (0, vitest_1.expect)((0, compat_1.propCamelCaseJustLikeFramer)('foo-bar')).toMatchInlineSnapshot(`"fooBar"`);
        (0, vitest_1.expect)((0, compat_1.propCamelCaseJustLikeFramer)('foo-bar-baz')).toMatchInlineSnapshot(`"fooBarBaz"`);
        (0, vitest_1.expect)((0, compat_1.propCamelCaseJustLikeFramer)('Detail - 1')).toMatchInlineSnapshot(`"detail1"`);
    });
    (0, vitest_1.test)('converts example-variable_dashes etc XX something 11 to camelCase', () => {
        (0, vitest_1.expect)((0, compat_1.propCamelCaseJustLikeFramer)('example-variable_dashes etc XX something 11')).toBe(`exampleVariableDashesEtcXXSomething11`);
    });
    (0, vitest_1.test)('converts 0 starts with ZeroEtc to camelCase', () => {
        (0, vitest_1.expect)((0, compat_1.propCamelCaseJustLikeFramer)('0 starts with ZeroEtc')).toBe(`_0StartsWithZeroEtc`);
    });
    (0, vitest_1.test)('converts underscores to camelCase', () => {
        (0, vitest_1.expect)((0, compat_1.propCamelCaseJustLikeFramer)('foo_bar')).toMatchInlineSnapshot(`"fooBar"`);
        (0, vitest_1.expect)((0, compat_1.propCamelCaseJustLikeFramer)('foo_bar_baz')).toMatchInlineSnapshot(`"fooBarBaz"`);
    });
    (0, vitest_1.test)('removes spaces and camelCases', () => {
        (0, vitest_1.expect)((0, compat_1.propCamelCaseJustLikeFramer)('Foo Bar')).toMatchInlineSnapshot(`"fooBar"`);
        (0, vitest_1.expect)((0, compat_1.propCamelCaseJustLikeFramer)('Foo Bar Baz')).toMatchInlineSnapshot(`"fooBarBaz"`);
    });
    (0, vitest_1.test)('ensures first character is lowercase', () => {
        (0, vitest_1.expect)((0, compat_1.propCamelCaseJustLikeFramer)('FooBar')).toMatchInlineSnapshot(`"fooBar"`);
        (0, vitest_1.expect)((0, compat_1.propCamelCaseJustLikeFramer)('Foo')).toMatchInlineSnapshot(`"foo"`);
    });
    (0, vitest_1.test)('handles empty string', () => {
        (0, vitest_1.expect)((0, compat_1.propCamelCaseJustLikeFramer)('')).toMatchInlineSnapshot('""');
    });
    (0, vitest_1.test)('handles mixed cases', () => {
        (0, vitest_1.expect)((0, compat_1.propCamelCaseJustLikeFramer)('Foo-Bar_Baz Test')).toMatchInlineSnapshot(`"fooBar_BazTest"`);
    });
    (0, vitest_1.test)('converts APITableData to apiTableData', () => {
        (0, vitest_1.expect)((0, compat_1.propCamelCaseJustLikeFramer)('Settings APITableData')).toBe(`settingsAPITAbleData`);
    });
});
//# sourceMappingURL=compat.test.js.map