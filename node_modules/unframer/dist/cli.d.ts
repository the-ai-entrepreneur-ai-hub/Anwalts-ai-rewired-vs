import './sentry.js';
import { StyleToken } from './exporter.js';
import { BreakpointSizes } from './css.js';
export declare const cli: import("cac").CAC;
export type Config = {
    jsx?: boolean;
    components: {
        [name: string]: string;
    };
    componentBreakpoints?: {
        variantId: string;
        componentId: string;
        componentName: string;
        breakpointName: string;
        width: number;
    }[];
    externalPackages?: string[];
    allExternal?: boolean;
    projectId?: string;
    fullFramerProjectId?: string;
    projectName?: string;
    framerWebPages?: {
        webPageId: string;
        components?: string[];
        path: string;
    }[];
    locales?: {
        code: string;
        id: string;
        name: string;
        slug: string;
    }[];
    breakpoints?: BreakpointSizes;
    tokens?: StyleToken[];
    outDir?: string;
    componentInstancesInIndexPage: ComponentInstanceInPage[];
    pageBackgroundColor?: string;
};
type ComponentInstanceInPage = {
    pageOrdering: number;
    componentId: string;
    componentPathSlug: string;
    controls: Record<string, any>;
    nodeDepth: number;
    webPageId: string;
};
export declare function configFromFetch({ projectId, externalPackages, allExternal, outDir, }: {
    projectId: any;
    externalPackages?: string[] | undefined;
    allExternal?: boolean | undefined;
    outDir?: string | undefined;
}): Promise<{
    websiteUrl: string | null;
    cwd: string;
    config: Config;
}>;
export {};
//# sourceMappingURL=cli.d.ts.map