import { ComponentFont } from './framer.js';
export type ComponentFontBundle = {
    /**
     * This flag specifies whether the font bundle includes the specific font
     * weights of Framer’s Inter font that the component uses. New smart
     * components do that (which means we can emit CSS only for Inter fonts that
     * are actually used); older smart components don’t (which means some places
     * will emit CSS for all Inter fonts if this flag is not set).
     * https://www.notion.so/framer/RFC-ComponentFont-v2-d5fd3e822fb049ffb6971554ab0e4e42
     */
    explicitInter: boolean;
    fileName?: string;
    fonts: ComponentFont[];
};
export declare function logFontsUsage(fontsBundles: ComponentFontBundle[]): string;
export declare function getFontsStyles(_fontsDefs: ComponentFontBundle[]): string;
export declare const defaultBreakpointSizes: {
    readonly base: 0;
    readonly sm: 320;
    readonly md: 768;
    readonly lg: 960;
    readonly xl: 1200;
    readonly '2xl': 1536;
};
export type BreakpointSizes = typeof defaultBreakpointSizes;
export declare const breakpointsStylesLegacy: (breakpointSizes?: BreakpointSizes) => string;
export declare const breakpointsStyles: (breakpointSizes?: BreakpointSizes) => string;
export declare function groupBy<T>(arr: T[], key: (x: T) => string): Map<string, T[]>;
//# sourceMappingURL=css.d.ts.map