import type { redirect as Redirect } from './utils.ts';
import type { RouteSchema, Prettify, ResolvePath, SingletonBase, GetRequestSchema } from './types.ts';
import { SpiceflowRequest, WaitUntil } from './spiceflow.ts';
export type ErrorContext<in out Route extends RouteSchema = {}, in out Singleton extends SingletonBase = {
    state: {};
    derive: {};
    resolve: {};
}, Path extends string = ''> = Prettify<{
    query: undefined extends Route['query'] ? Record<string, string> : Route['query'];
    params: undefined extends Route['params'] ? Path extends `${string}/${':' | '*'}${string}` ? ResolvePath<Path> : {
        [key in string]: string;
    } : Route['params'];
    redirect: Redirect;
    /**
     * Path extracted from incoming URL
     *
     * Represent a value extracted from URL
     *
     * @example '/id/9'
     */
    path: string;
    /**
     * Path as registered to router
     *
     * Represent a path registered to a router, not a URL
     *
     * @example '/id/:id'
     */
    request: SpiceflowRequest<GetRequestSchema<Route>>;
    state: Singleton['state'];
    waitUntil: WaitUntil;
}>;
export type Context<in out Route extends RouteSchema = {}, in out Singleton extends SingletonBase = {
    state: {};
    derive: {};
    resolve: {};
}, Path extends string = ''> = Prettify<{
    query: undefined extends Route['query'] ? Record<string, string> : Route['query'];
    params: undefined extends Route['params'] ? Path extends `${string}/${':' | '*'}${string}` ? ResolvePath<Path> : never : Route['params'];
    redirect: Redirect;
    path: string;
    request: SpiceflowRequest<GetRequestSchema<Route>>;
    state: Singleton['state'];
    waitUntil: WaitUntil;
}>;
export type MiddlewareContext<in out Singleton extends SingletonBase = {
    state: {};
}> = Prettify<{
    state: Singleton['state'];
    request: Request;
    path: string;
    query?: Record<string, string | undefined>;
    params?: Record<string, string | undefined>;
    waitUntil: WaitUntil;
    redirect: Redirect;
}>;
//# sourceMappingURL=context.d.ts.map