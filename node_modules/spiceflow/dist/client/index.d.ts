import type { AnySpiceflow, Spiceflow } from '../spiceflow.ts';
import type { SpiceflowClient } from './types.ts';
export { SpiceflowClient };
interface SSEEvent {
    event?: string;
    data: any;
    id?: string;
}
export declare class TextDecoderStream extends TransformStream<Uint8Array, string> {
    constructor();
}
export declare function streamSSEResponse(response: Response, map: (x: SSEEvent) => any): AsyncGenerator<SSEEvent>;
export declare const createSpiceflowClient: <const App extends AnySpiceflow>(domain: App | string, config?: SpiceflowClient.Config & (App extends Spiceflow<any, any, infer Singleton, any, any, any, any> ? {
    state?: Singleton["state"];
} : {})) => SpiceflowClient.Create<App>;
//# sourceMappingURL=index.d.ts.map